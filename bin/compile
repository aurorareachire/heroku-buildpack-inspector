#!/usr/bin/env bash
# Heroku buildpack compile script
# This script checks for INSPECT_BUILD=true and starts a tmate session if set

set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

echo "-----> Inspector Buildpack"

indent () {
  sed -u 's/^/       /'
}

# Check if INSPECT_BUILD is set
#if [ -f "$ENV_DIR/INSPECT_BUILD" ] && [ "$(cat $ENV_DIR/INSPECT_BUILD)" = "true" ]; then
if true; then

#    (
#      echo "----ENV----"
#      env | sed 's/^\([^=]*\)=\(.*\)$/\x1b[32m\1\x1b[0m=\x1b[34m\2\x1b[0m/'
#      echo "------------"
#    ) | indent

    echo "INSPECT_BUILD=true detected, setting up interactive session..." | indent

    if ! tmate -V > /dev/null 2>&1; then
      # Download and install tmate
      TMATE_VERSION="2.4.0"
      TMATE_URL="https://github.com/tmate-io/tmate/releases/download/${TMATE_VERSION}/tmate-${TMATE_VERSION}-static-linux-amd64.tar.xz"

      echo "Downloading tmate ${TMATE_VERSION}..." | indent
      mkdir -p /tmp/tmate
      cd /tmp/tmate

      curl -s -L -o tmate.tar.xz "$TMATE_URL"
      tar xf tmate.tar.xz
      TMATE_BIN="$(find . -name tmate -type f)"
    else
      TMATE_BIN="tmate"
    fi

    #  exec 3> >(indent | tee /tmp/tmate.log) creates file descriptor 3 that redirects to a process substitution.
    #
    #  Breaking it down:
    #  • exec 3> - Opens file descriptor 3 for writing
    #  • >(indent | tee /tmp/tmate.log) - Process substitution that creates a pipe to the command
    #  • $TMATE_BIN -F >&3 2>&1 - Redirects stdout to fd 3, stderr to stdout
    #
    #  So when tmate writes output, it goes to fd 3, which pipes it through indent | tee /tmp/tmate.log.
    #
    #  File descriptors 0, 1, 2 are stdin, stdout, stderr. You can create additional ones (3, 4, 5...) for custom redirections.
    #
    #  The >&3 syntax means "redirect stdout to file descriptor 3".

    echo "Starting tmate session..." | indent
    exec 3> >(indent | tee /tmp/tmate.log)
    $TMATE_BIN -F >&3 2>&1 &
    TMATE_PID=$!

    # Wait for tmate to be ready and extract connection info
    (echo "Waiting for tmate to initialize..."; echo) | indent
    sleep 2

    # Try to get SSH connection string from tmate
    for i in {1..30}; do
        if [ -f /tmp/tmate.log ]; then
            SSH_CMD=$(grep "ssh session:" /tmp/tmate.log | head -1 || true)
            if [ -n "$SSH_CMD" ]; then
                break
            fi
        fi
        sleep 1
    done

    (
      echo ""
      echo "======================================================================"
      echo "       TMATE SESSION READY FOR INSPECTION"
      echo "======================================================================"
      echo ""
    ) | indent
    if [ -n "$SSH_CMD" ]; then
        echo "$SSH_CMD" | indent
    else
        echo "Connection info in /tmp/tmate.log:" | indent
        cat /tmp/tmate.log || (echo "(tmate.log not found)" | indent)
    fi

    (
      echo ""
      echo "======================================================================"
      echo "       Build will continue in 60 seconds"
      echo "       Create file /tmp/wait if you need more time"
      echo "       Create file /tmp/continue to continue the build right away"
      echo "======================================================================"
      echo ""
    ) | indent


    # Wait for user to finish inspection
    # Either they cancel the build, or they create /tmp/continue
    /bin/rm -f /tmp/continue /tmp/wait
    n=0
    while [ ! -f /tmp/continue ]; do
        sleep 1
        if [[ $((n % 5)) -eq 0 ]]; then
          (
            echo "[$(date)] Waiting for inspection to complete (touch /tmp/continue to proceed)"
          ) | indent
        elif [ "$n" -gt 60 ] && [ ! -f /tmp/wait ]; then
          echo "[$(date)] Timed out waiting for inspection to complete" | indent
          break
        fi
        n=$((n+1))
    done

    echo "Inspection complete, continuing build..." | indent
    set -xv
    kill $TMATE_PID 2>/dev/null || true

else
  (
    echo "INSPECT_BUILD not set, skipping inspection"
    echo "Set INSPECT_BUILD=true to enable interactive debugging"
    ) | indent
fi

echo "-----> Inspector Buildpack complete"
exit 0
